'''
Given two sorted integer arrays, `X[]` and `Y[]` of size `m` and `n` each, in-place merge elements of `X[]` with elements of array `Y[]` by maintaining the sorted order, i.e., fill `X[]` with the first `m` smallest elements and fill `Y[]` with remaining elements.

Input :

X[] = [1, 4, 7, 8, 10]
Y[] = [2, 3, 9]

Output:

X[] = [1, 2, 3, 4, 7]
Y[] = [8, 9, 10]

'''
# def merge_sorted_array(x,y):
#     z=x+y
#     res=sorted(z)
#     return res



def merge_sorted_array(x, y):
 
    m = len(x)
    n = len(y)
 
    for i in range(m):
 
        if x[i] > y[0]:
 
            temp = x[i]
            x[i] = y[0]
            y[0] = temp
 
            first = y[0]
 
            k = 1
            while k < n and y[k] < first:
                y[k - 1] = y[k]
                k = k + 1
 
            y[k - 1] = first
    res =x+y
    return res
 
 
if __name__ == '__main__':
 
    x = [1, 4, 7, 8, 10]
    y = [2, 3, 9]
 
    merge_sorted_array(x, y)


if __name__ == "__main__":
    x=[1, 4, 7, 8, 10]
    y=[2, 3, 9]
    print(merge_sorted_array(x,y))    